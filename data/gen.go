// The following directive is necessary to make the package coherent:

//go:build ignore
// +build ignore

// This program generates fallback.go. It can be invoked by running
// go generate

//go:generate go run gen.go

package main

import (
	"log"
	"net/http"
	"os"
	"text/template"
	"time"

	"github.com/spf13/afero"
)

func main() {
	const url = "https://publicsuffix.org/list/public_suffix_list.dat"

	rsp, err := http.Get(url)
	fail(err)
	defer rsp.Body.Close()

	b, err := afero.ReadAll(rsp.Body)
	fail(err)
	content := string(b)

	f, err := os.Create("../fallback.go")
	f.Seek(0, 0)
	fail(err)
	defer f.Close()

	pslTemplate.Execute(f, struct {
		Timestamp time.Time
		URL       string
		Content   string
	}{
		Timestamp: time.Now(),
		URL:       url,
		Content:   content,
	})
}

func fail(err error) {
	if err != nil {
		log.Fatal(err)
	}
}

var pslTemplate = template.Must(template.New("").Parse(`package fasttld
// Code generated by go generate; DO NOT EDIT.
// This file was generated by robots at
// {{ .Timestamp }}
// using data from
// {{ .URL }}

const inlinePSL string = ` + "`{{ .Content }}`\n"))
